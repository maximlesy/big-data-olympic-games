@page "/"
@inject HttpClient Http
@using System.Text.Json.Serialization

<div class="container d-flex align-items-center justify-content-center vh-100">
    <div class="row">
        <div class="col-12">
            <div class="card shadow-lg p-4">
                <div class="text-center mb-4">
                    <img src="resources/olympic-rings.png" alt="Olympic Rings" style="max-width: 200px;" />
                </div>
                <h3 class="card-title mb-4">Sport Prediction Form</h3>
                <EditForm Model="@InputData" OnValidSubmit="HandleValidSubmit" FormName="SportPredictionForm">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="form-group">
                        <label>Weight:</label>
                        <InputNumber @bind-Value="InputData.Weight" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Height:</label>
                        <InputNumber @bind-Value="InputData.Height" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Age:</label>
                        <InputNumber @bind-Value="InputData.Age" class="form-control" />
                    </div>
                    <div class="form-group" style="margin-bottom: 20px">
                        <label>Sex:</label>
                        <InputSelect @bind-Value="InputData.Sex" class="form-control">
                            <option value="Male">Male</option>
                            <option value="Female">Female</option>
                        </InputSelect>
                    </div>
                    <div class="text-center" style="margin-bottom: 20px">
                        <button type="submit" class="btn btn-primary">Predict Sport</button>
                    </div>
                </EditForm>
                @if (!string.IsNullOrEmpty(predictedSport))
                {
                    <p class="mt-4 text-center"><strong>Predicted Sport:</strong> @predictedSport</p>
                }
            </div>
        </div>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private SportInputData InputData { get; set; } = new();
    private string predictedSport;

    private async Task HandleValidSubmit()
    {
        InputData.Bmi = InputData.Weight / (InputData.Height / 100 * InputData.Height / 100);
        var response = await Http.PostAsJsonAsync("http://localhost:8000/predict", InputData);
        var result = await response.Content.ReadFromJsonAsync<PredictionResponse>();
        predictedSport = result?.PredictedSport ?? "Unknown";
    }

    private class SportInputData
    {
        [JsonPropertyName("height")]
        public float Height { get; set; }
        [JsonPropertyName("weight")]
        public float Weight { get; set; }
        [JsonPropertyName("age")]
        public int Age { get; set; }
        [JsonPropertyName("sex")]
        public string Sex { get; set; }
        [JsonPropertyName("bmi")]
        public float Bmi { get; set; }

        public SportInputData()
        {
            Weight = 85;
            Height = 189;
            Sex = "Male";
            Age = 20;
        }
    }

    private class PredictionResponse
    {
        public string PredictedSport { get; set; }
    }
}